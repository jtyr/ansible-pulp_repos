---

- name: Check if {{ repo.group }}-{{ repo.platform }}{{ repo.platform_version | default('') }}-{{ repo.name }}-{{ repo.tag }} repo exists
  uri:
    url: https://{{ pulp_repos_server }}/pulp/api/v2/repositories/{{ repo.group }}-{{ repo.platform }}{{ repo.platform_version | default('') }}-{{ repo.name }}-{{ repo.tag }}/
    method: GET
    validate_certs: "{{ pulp_repos_validate_certs }}"
    force_basic_auth: yes
    user: "{{ pulp_repos_auth_user }}"
    password: "{{ pulp_repos_auth_user }}"
  register: pulp_repos_create_check
  failed_when: false

# Can be removed after https://pulp.plan.io/issues/1984 is implemented
- name: Make sure the key directory exists
  file:
    path: "{{ pulp_repos_gpgkey_dir }}"
    state: directory
    owner: "{{ pulp_repos_gpgkey_dir_user }}"
    group: "{{ pulp_repos_gpgkey_dir_group }}"
    mode: "{{ pulp_repos_gpgkey_dir_mode }}"
  when: >
    pulp_repos_create_check.status == 404 and
    repo.gpgkey is defined and repo.gpgkey | match('^http(s|)://')

- name: Fetch GPG key for {{ repo.group }}-{{ repo.platform }}{{ repo.platform_version | default('') }}-{{ repo.name }}-{{ repo.tag }} repo
  uri:
    url: "{{ repo.gpgkey }}"
    validate_certs: "{{ repo.gpgkey_validate | default('no') }}"
    # Comment out the next 4 lines after https://pulp.plan.io/issues/1984 is implemented
    dest: "{{ pulp_repos_gpgkey_dir }}/{{ repo.group }}-{{ repo.platform }}{{ repo.platform_version | default('') }}-{{ repo.name }}-{{ repo.tag }}.key"
    owner: "{{ pulp_repos_gpgkey_user }}"
    group: "{{ pulp_repos_gpgkey_group }}"
    mode: "{{ pulp_repos_gpgkey_mode }}"
    # Uncomment the next two lines after https://pulp.plan.io/issues/1984 is implemented
    #return_content: yes
  #register: pulp_repos_create_gpgkey
  when: >
    pulp_repos_create_check.status == 404 and
    repo.gpgkey is defined and repo.gpgkey | match('^http(s|)://')

- name: Create {{ repo.group }}-{{ repo.platform }}{{ repo.platform_version | default('') }}-{{ repo.name }}-{{ repo.tag }} repo
  uri:
    url: https://{{ pulp_repos_server }}/pulp/api/v2/repositories/
    method: POST
    validate_certs: "{{ pulp_repos_validate_certs }}"
    force_basic_auth: yes
    user: "{{ pulp_repos_auth_user }}"
    password: "{{ pulp_repos_auth_user }}"
    body_format: json
    body: "{{ pulp_repos_create_data | encode_json }}"
    status_code: 201
  register: pulp_repos_created
  changed_when: >
    pulp_repos_created is defined and
    pulp_repos_created.status == 201
  when: pulp_repos_create_check.status == 404

- name: Sync {{ repo.group }}-{{ repo.platform }}{{ repo.platform_version | default('') }}-{{ repo.name }}-{{ repo.tag }} repo
  uri:
    url: https://{{ pulp_repos_server }}/pulp/api/v2/repositories/{{ repo.group }}-{{ repo.platform }}{{ repo.platform_version | default('') }}-{{ repo.name }}-{{ repo.tag }}/actions/sync/
    method: POST
    validate_certs: "{{ pulp_repos_validate_certs }}"
    force_basic_auth: yes
    user: "{{ pulp_repos_auth_user }}"
    password: "{{ pulp_repos_auth_user }}"
    body_format: json
    body:
      override_config: null
    status_code: 202
  register: pulp_repos_synced
  changed_when: >
    pulp_repos_synced is defined and
    pulp_repos_synced.status == 202
  when: >
    repo['feed'] is defined and
    pulp_repos_created is defined and
    pulp_repos_created.changed
